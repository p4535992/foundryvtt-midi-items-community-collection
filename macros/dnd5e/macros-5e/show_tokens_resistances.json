{
  "name": "Show Tokens Resistances",
  "permission": {
    "default": 0
  },
  "type": "script",
  "flags": {},
  "scope": "global",
  "command": "// Prints the condition immunities, damage immunities, damage resistances and damage vulnerabilities of the currently selected token(s).\r\n// Damage types that appeared in the previous chat message (e.g. due to a roll) are highlighted in red. \r\n// A DM can call this macro after a player rolled damage to quickly see if they need to apply full, half or double damage.\r\n//\r\n// Author: https://github.com/Nijin22\r\n// Licence: MIT, see https://choosealicense.com/licenses/mit/\r\n\r\nconst damageTypes = [\"Acid\", \"Bludgeoning\", \"Cold\", \"Fire\", \"Force\", \"Lightning\", \"Necrotic\", \"Piercing\", \"Non-Magical Physical\",\r\n                     \"Piercing\", \"Poison\", \"Psychic\", \"Radiant\", \"Slashing\", \"Thunder\",\r\n                     \"Bludgeoning, Piercing, and Slashing from Nonmagical Attacks\"];\r\n\r\nlet msg = \"\";\r\nlet previousMessage;\r\ntry { \r\n    previousMessage = game.messages.entries[game.messages.entries.length-1].data.content;\r\n} catch (e) {\r\n    // No previous message in log. Default to an empty string.\r\n    previousMessage = \"\";\r\n}\r\n\r\n// Enable case-insensitive replacements\r\n// Source: https://stackoverflow.com/a/7313467\r\nString.prototype.replaceAllCaseInsensitive = function(strReplace, strWith) {\r\n    // See http://stackoverflow.com/a/3561711/556609\r\n    var esc = strReplace.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n    var reg = new RegExp(esc, 'ig');\r\n    return this.replace(reg, strWith);\r\n};\r\n\r\n\r\n// Get traits\r\nconst traits = new Map();\r\ntraits.set(\"ci\", \"Condition Immunities\");\r\ntraits.set(\"di\", \"Damage Immunities (No damage)\");\r\ntraits.set(\"dr\", \"Damage Resistances (Half damage)\");\r\ntraits.set(\"dv\", \"Damage Vulnerabilities (Double dmg)\");\r\ncanvas.tokens.controlled.forEach(token => {\r\n    let name = token.actor.name;\r\n    msg += `<h2>${name}</h2>`;\r\n    \r\n    traits.forEach((traitDescr, traitId, map) => {\r\n        // Clone 'default' 5e trait array\r\n        var allTraits = [...token.actor.data.data.traits[traitId].value];\r\n        \r\n        // Custom traits\r\n        allTraits = allTraits.concat(token.actor.data.data.traits[traitId].custom.split(\";\").map(x => x.trim()));\r\n        \r\n        var printableTraits = allTraits.join(\"; \");\r\n        if (printableTraits.length == 0) {\r\n            printableTraits = \"-\";\r\n        }\r\n        msg += `<h3>${traitDescr}</h3><p>${printableTraits}</p>`;\r\n    });\r\n});\r\n\r\n// highlight words from previous message\r\nlet damageTypesOfPrevousMsg = [];\r\ndamageTypes.forEach(damageType => {\r\n    if (previousMessage.toLowerCase().indexOf(damageType.toLowerCase()) != -1){\r\n        damageTypesOfPrevousMsg.push(damageType);\r\n    }\r\n});\r\ndamageTypesOfPrevousMsg.forEach(damageType => {\r\n    msg = msg.replaceAllCaseInsensitive(damageType, `<span style=\"color:red; font-weight: bold;\">${damageType}</span>`);\r\n});\r\n\r\n\r\nif (msg.length === 0) {\r\n    msg = \"No tokens selected.\";\r\n}\r\n\r\nui.notifications.info(msg);\r\n\r\n// Post message to self\r\n/*ChatMessage.create({\r\n    content: msg,\r\n    whisper: [game.user._id]\r\n});*/\r\n",
  "author": "",
  "img": "icons/svg/dice-target.svg",
  "actorIds": [],
  "_id": "2NIoqVnUSV1FgJ9e"
}
