{
  "name": "Apply Damage",
  "permission": {
    "default": 0
  },
  "type": "script",
  "flags": {},
  "scope": "global",
  "command": "// Displays a prompt which asks for an amount of damage to inflict\r\n// Inflicts the input damage amount to all selected tokens\r\n\r\nlet content = `\r\n  <form>\r\n    <div class=\"form-group\">\r\n      <label for=\"id=\"damage-amount\">Damage</label>\r\n      <input id=\"damage-amount\" type=\"number\" name=\"inputField\" autofocus>\r\n    </div>\r\n  </form>`\r\n\r\nnew Dialog({\r\n  title: 'How much damage should be applied (negative for healing)?',\r\n  content: content,\r\n  buttons:{\r\n    yes: {\r\n      icon: \"<i class='fas fa-check'></i>\",\r\n      label: `Apply Damage`\r\n    }\r\n  },\r\n\r\n  default:'yes',\r\n\r\n  close: html => {\r\n    let result = html.find('input[name=\\'inputField\\']');\r\n    if (result.val() !== '') {\r\n      let damage = result.val();\r\n      let allSelected = canvas.tokens.controlled\r\n\r\n      allSelected.forEach(selected => {\r\n        let actor = selected.actor\r\n        let hp = actor.data.data.attributes.hp.value\r\n        let maxHp = actor.data.data.attributes.hp.max\r\n\r\n        let updatedHp = damage > hp ? 0 : hp - damage\r\n\r\n        actor.update({'data.attributes.hp.value': updatedHp > maxHp ? maxHp : updatedHp})\r\n\r\n        console.log(actor)\r\n      })\r\n    }\r\n  }\r\n}).render(true);\r\n\r\n(async () => {\r\nawait new Promise(resolve => setTimeout(resolve, 20));\r\nlet input = $('#damage-amount').focus();\r\n})();\r\n",
  "author": "",
  "img": "icons/svg/dice-target.svg",
  "actorIds": [],
  "_id": "Ey3vzQB2uvOrLgQ1"
}
